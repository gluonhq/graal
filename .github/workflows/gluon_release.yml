name: Gluon Release

on:
  push:
    tags:
      - '*'

env:
  RELEASE_VERSION: 21.1.0
  LANG: en_US.UTF-8
  JDK: "labsjdk-ce-11"

jobs:
  build-graalvm-linux:
    if: ${{ false }}  # disable temporarily
    runs-on: ubuntu-20.04
    env:
      JAVA_HOME: ${{ github.workspace }}/jdk
      MX_PATH: ${{ github.workspace }}/mx
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/checkout@v2
      with:
        repository: graalvm/mx.git
        fetch-depth: 1
        ref: master
        path: ${{ env.MX_PATH }}
    - uses: actions/cache@v1
      with:
        path: ~/.mx
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: ${{ runner.os }}-mx-
    - name: Get JDK
      run: |
        mkdir jdk-dl
        ${MX_PATH}/mx fetch-jdk --java-distribution ${JDK} --to jdk-dl --alias ${JAVA_HOME}
    - name: Build GraalVM
      id: linux-build-graalvm
      env:
        DISABLE_LIBPOLYGLOT: true
        DISABLE_POLYGLOT: true
        FORCE_BASH_LAUNCHERS: false
        LINKY_LAYOUT: "*.jar"
      run: |
        echo ${JAVA_HOME}
        ${JAVA_HOME}/bin/java -version
        ${MX_PATH}/mx --primary-suite-path vm --dy /substratevm build
        GRAALVM_HOME=`${MX_PATH}/mx --primary-suite-path vm --dy /substratevm graalvm-home`
        echo "::set-output name=graalvm-home-dir::${GRAALVM_HOME}"
    - name: Create distribution
      run: |
        mv ${{ steps.linux-build-graalvm.outputs.graalvm-home-dir }} graalvm-svm-linux-gluon-${RELEASE_VERSION}
        zip -r graalvm-svm-linux-gluon-${RELEASE_VERSION}.zip graalvm-svm-linux-gluon-${RELEASE_VERSION}
    - name: Archive distribution
      uses: actions/upload-artifact@v2
      with:
        name: graalvm-zip-linux
        path: |
          graalvm-svm-linux-gluon-${{ env.RELEASE_VERSION }}.zip

  build-graalvm-darwin:
    if: ${{ false }}  # disable temporarily
    runs-on: macos-10.15
    env:
      JAVA_ROOT: ${{ github.workspace }}/jdk
      JAVA_HOME: ${{ github.workspace }}/jdk/Contents/Home
      MX_PATH: ${{ github.workspace }}/mx
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/checkout@v2
      with:
        repository: graalvm/mx.git
        fetch-depth: 1
        ref: master
        path: ${{ env.MX_PATH }}
    - uses: actions/cache@v1
      with:
        path: ~/.mx
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: ${{ runner.os }}-mx-
    - name: Get JDK
      run: |
        mkdir jdk-dl
        ${MX_PATH}/mx fetch-jdk --java-distribution ${JDK} --to jdk-dl --alias ${JAVA_ROOT}
    - name: Build GraalVM
      id: darwin-build-graalvm
      env:
        DISABLE_LIBPOLYGLOT: true
        DISABLE_POLYGLOT: true
        FORCE_BASH_LAUNCHERS: false
        LINKY_LAYOUT: "*.jar"
      run: |
        echo ${JAVA_HOME}
        ${JAVA_HOME}/bin/java -version
        ${MX_PATH}/mx --primary-suite-path vm --dy /substratevm build
        GRAALVM_HOME=`${MX_PATH}/mx --primary-suite-path vm --dy /substratevm graalvm-home`
        echo "::set-output name=graalvm-home-dir::${GRAALVM_HOME}"
    - name: Create distribution
      run: |
        mv ${{ steps.darwin-build-graalvm.outputs.graalvm-home-dir }} graalvm-svm-darwin-gluon-${RELEASE_VERSION}
        zip -r graalvm-svm-darwin-gluon-${RELEASE_VERSION}.zip graalvm-svm-darwin-gluon-${RELEASE_VERSION}
    - name: Archive distribution
      uses: actions/upload-artifact@v2
      with:
        name: graalvm-zip-darwin
        path: |
          graalvm-svm-darwin-gluon-${{ env.RELEASE_VERSION }}.zip

  build-graalvm-windows:
    runs-on: windows-2019
    env:
      JAVA_HOME: ${{ github.workspace }}\jdk
      MX_PATH: ${{ github.workspace }}\mx
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/checkout@v2
      with:
        repository: graalvm/mx.git
        fetch-depth: 1
        ref: master
        path: ${{ env.MX_PATH }}
    - uses: actions/cache@v1
      with:
        path: ~/.mx
        key: ${{ runner.os }}-mx-${{ hashFiles('**/suite.py') }}
        restore-keys: ${{ runner.os }}-mx-
    - name: Get JDK
      run: |
        mkdir jdk-dl
        iex "$env:MX_PATH\mx.cmd fetch-jdk --java-distribution $env:JDK --to jdk-dl --alias $env:JAVA_HOME"
    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    - name: Build GraalVM
      id: windows-build-graalvm
      env:
        DEFAULT_DYNAMIC_IMPORTS: /substratevm,/tools
        EXCLUDE_COMPONENTS: nju,llp,dis,pbm,llmulrl
        FORCE_BASH_LAUNCHERS: polyglot
        SKIP_LIBRARIES: polyglot
      run: |
        echo $env:JAVA_HOME
        echo $env:PATH
        iex "$env:JAVA_HOME\bin\java -version"
        iex "$env:MX_PATH\mx.cmd --primary-suite-path vm build"
        $GRAALVM_HOME = (iex "$env:MX_PATH\mx.cmd --primary-suite-path vm graalvm-home") | Out-String
        echo "::set-output name=graalvm-home-dir::$GRAALVM_HOME"
    - name: Create distribution
      shell: bash
      run: |
        set GRAALVM_HOME=`wslpath -a ${{ steps.windows-build-graalvm.outputs.graalvm-home-dir }}
        mv ${GRAALVM_HOME} graalvm-svm-windows-gluon-${RELEASE_VERSION}
        zip -r graalvm-svm-windows-gluon-${RELEASE_VERSION}.zip graalvm-svm-windows-gluon-${RELEASE_VERSION}
    - name: Archive distribution
      uses: actions/upload-artifact@v2
      with:
        name: graalvm-zip-windows
        path: |
          graalvm-svm-windows-gluon-${{ env.RELEASE_VERSION }}.zip

  create-release:
    runs-on: ubuntu-20.04
    needs:
      - build-graalvm-linux
      - build-graalvm-darwin
      - build-graalvm-windows
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        name: GraalVM CE Gluon ${{ github.ref }}
        body: |
          This is a Gluon build of GraalVM.
          Based on Gluon Graal commit: ${{ github.sha }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: artifacts/*.zip
